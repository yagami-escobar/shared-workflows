name: Deploy to Kubernetes Reusable

on:
  workflow_call:
    inputs:
      image:
        description: 'La imagen Docker completa a desplegar'
        required: true
        type: string
      deployment-name:
        description: 'El nombre del Deployment de Kubernetes'
        required: true
        type: string
      namespace:
        description: 'El Namespace de Kubernetes'
        required: true
        type: string
      container-port:
        description: 'El puerto que expone el contenedor'
        required: false
        type: number
        default: 80

jobs:
  deploy_to_kubernetes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv -v ./kind /usr/local/bin/kind

      - name: Create Kind Cluster
        run: |
          kind create cluster --name yagami-cluster
          kubectl cluster-info --context kind-yagami-cluster

      - name: Show Kubeconfig
        run: |
          echo "$KUBECONFIG"

      - name: Create Kubernetes Deployment manifest
        id: generate_manifest
        run: |
          cat <<EOF > deployment.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: ${{ inputs.deployment-name }}
            namespace: ${{ inputs.namespace }}
            labels:
              app: ${{ inputs.deployment-name }}
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: ${{ inputs.deployment-name }}
            template:
              metadata:
                labels:
                  app: ${{ inputs.deployment-name }}
              spec:
                containers:
                - name: ${{ inputs.deployment-name }}
                  image: ${{ inputs.image }}
                  ports:
                  - containerPort: ${{ inputs.container-port }}
          EOF
          echo "::notice file=deployment.yaml::Generated Deployment manifest."
          cat deployment.yaml

      - name: Apply Kubernetes manifest
        run: |
          kubectl apply -f deployment.yaml -n ${{ inputs.namespace }}
          echo "::notice::Deployment ${{ inputs.deployment-name }} applied successfully in namespace ${{ inputs.namespace }} with image ${{ inputs.image }}"

      - name: Wait for Deployment rollout
        run: |
          kubectl rollout status deployment/${{ inputs.deployment-name }} -n ${{ inputs.namespace }} --timeout=5m
